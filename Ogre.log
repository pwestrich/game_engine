19:42:00: Creating resource group General
19:42:00: Creating resource group Internal
19:42:00: Creating resource group Autodetect
19:42:00: SceneManagerFactory for type 'DefaultSceneManager' registered.
19:42:00: Registering ResourceManager for type Material
19:42:00: Registering ResourceManager for type Mesh
19:42:00: Registering ResourceManager for type Skeleton
19:42:00: MovableObjectFactory for type 'ParticleSystem' registered.
19:42:00: OverlayElementFactory for type Panel registered.
19:42:00: OverlayElementFactory for type BorderPanel registered.
19:42:00: OverlayElementFactory for type TextArea registered.
19:42:00: Registering ResourceManager for type Font
19:42:00: ArchiveFactory for archive type FileSystem registered.
19:42:00: ArchiveFactory for archive type Zip registered.
19:42:00: ArchiveFactory for archive type EmbeddedZip registered.
19:42:00: DDS codec registering
19:42:00: FreeImage version: 3.15.3
19:42:00: This program uses FreeImage, a free, open source image library supporting all common bitmap formats. See http://freeimage.sourceforge.net for details
19:42:00: Supported formats: bmp,ico,jpg,jif,jpeg,jpe,jng,koa,iff,lbm,mng,pbm,pbm,pcd,pcx,pgm,pgm,png,ppm,ppm,ras,tga,targa,tif,tiff,wap,wbmp,wbm,psd,cut,xbm,xpm,gif,hdr,g3,sgi,exr,j2k,j2c,jp2,pfm,pct,pict,pic
19:42:00: Registering ResourceManager for type HighLevelGpuProgram
19:42:00: Registering ResourceManager for type Compositor
19:42:00: MovableObjectFactory for type 'Entity' registered.
19:42:00: MovableObjectFactory for type 'Light' registered.
19:42:00: MovableObjectFactory for type 'BillboardSet' registered.
19:42:00: MovableObjectFactory for type 'ManualObject' registered.
19:42:00: MovableObjectFactory for type 'BillboardChain' registered.
19:42:00: MovableObjectFactory for type 'RibbonTrail' registered.
19:42:00: *-*-* OGRE Initialising
19:42:00: *-*-* Version 1.8.1 (Byatis)
19:42:00: Loading library RenderSystem_GL
19:42:00: Installing plugin: GL RenderSystem
19:42:00: OpenGL Rendering Subsystem created.
19:42:00: Plugin successfully installed
19:42:00: CPU Identifier & Features
19:42:00: -------------------------
19:42:00:  *   CPU ID: GenuineIntel: Intel(R) Core(TM) i5-4670K CPU @ 3.40GHz
19:42:00:  *      SSE: yes
19:42:00:  *     SSE2: yes
19:42:00:  *     SSE3: yes
19:42:00:  *      MMX: yes
19:42:00:  *   MMXEXT: yes
19:42:00:  *    3DNOW: no
19:42:00:  * 3DNOWEXT: no
19:42:00:  *     CMOV: yes
19:42:00:  *      TSC: yes
19:42:00:  *      FPU: yes
19:42:00:  *      PRO: yes
19:42:00:  *       HT: no
19:42:00: -------------------------
19:42:00: *** Starting Win32GL Subsystem ***
19:42:00: Registering ResourceManager for type Texture
19:42:00: GLRenderSystem::_createRenderWindow "CSC 4903: Game Engine Programming", 1024x768 windowed  miscParams: FSAA=0 FSAAHint= colourDepth=32 displayFrequency=0 gamma=false vsync=false vsyncInterval=1 
19:42:00: Created Win32Window 'CSC 4903: Game Engine Programming' : 1040x806, 32bpp
19:42:00: GL_VERSION = 4.5.0 NVIDIA 350.12
19:42:00: GL_VENDOR = NVIDIA Corporation
19:42:00: GL_RENDERER = GeForce GTX 660/PCIe/SSE2
19:42:00: GL_EXTENSIONS = GL_AMD_multi_draw_indirect GL_AMD_seamless_cubemap_per_texture GL_ARB_arrays_of_arrays GL_ARB_base_instance GL_ARB_bindless_texture GL_ARB_blend_func_extended GL_ARB_buffer_storage GL_ARB_clear_buffer_object GL_ARB_clear_texture GL_ARB_clip_control GL_ARB_color_buffer_float GL_ARB_compatibility GL_ARB_compressed_texture_pixel_storage GL_ARB_conservative_depth GL_ARB_compute_shader GL_ARB_compute_variable_group_size GL_ARB_conditional_render_inverted GL_ARB_copy_buffer GL_ARB_copy_image GL_ARB_cull_distance GL_ARB_debug_output GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_derivative_control GL_ARB_direct_state_access GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_indirect GL_ARB_draw_elements_base_vertex GL_ARB_draw_instanced GL_ARB_enhanced_layouts GL_ARB_ES2_compatibility GL_ARB_ES3_compatibility GL_ARB_ES3_1_compatibility GL_ARB_explicit_attrib_location GL_ARB_explicit_uniform_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_layer_viewport GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_get_program_binary GL_ARB_get_texture_sub_image GL_ARB_gpu_shader5 GL_ARB_gpu_shader_fp64 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_indirect_parameters GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_internalformat_query2 GL_NV_internalformat_sample_query GL_ARB_invalidate_subdata GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multi_bind GL_ARB_multi_draw_indirect GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_occlusion_query2 GL_ARB_pipeline_statistics_query GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_program_interface_query GL_ARB_provoking_vertex GL_ARB_robust_buffer_access_behavior GL_ARB_robustness GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_seamless_cubemap_per_texture GL_ARB_separate_shader_objects GL_ARB_shader_atomic_counters GL_ARB_shader_bit_encoding GL_ARB_shader_draw_parameters GL_ARB_shader_group_vote GL_ARB_shader_image_load_store GL_ARB_shader_image_size GL_ARB_shader_objects GL_ARB_shader_precision GL_ARB_query_buffer_object GL_ARB_shader_storage_buffer_object GL_ARB_shader_subroutine GL_ARB_shader_texture_image_samples GL_ARB_shader_texture_lod GL_ARB_shading_language_100 GL_ARB_shading_language_420pack GL_ARB_shading_language_include GL_ARB_shading_language_packing GL_ARB_shadow GL_ARB_sparse_buffer GL_ARB_sparse_texture GL_ARB_stencil_texturing GL_ARB_sync GL_ARB_tessellation_shader GL_ARB_texture_barrier GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_range GL_ARB_texture_compression GL_ARB_texture_compression_bptc GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_cube_map_array GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_levels GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_stencil8 GL_ARB_texture_storage GL_ARB_texture_storage_multisample GL_ARB_texture_swizzle GL_ARB_texture_view GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback3 GL_ARB_transform_feedback_instanced GL_ARB_transform_feedback_overflow_query GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_binding GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_texture_float GL_ATI_texture_mirror_once GL_S3_s3tc GL_EXT_texture_env_add GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_Cg_shader GL_EXT_depth_bounds_test GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXTX_framebuffer_mixed_formats GL_EXT_framebuffer_multisample_blit_scaled GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_polygon_offset_clamp GL_EXT_provoking_vertex GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_shader_objects GL_EXT_separate_specular_color GL_EXT_shader_image_load_store GL_EXT_shader_integer_mix GL_EXT_shadow_funcs GL_EXT_stencil_two_side GL_EXT_stencil_wrap GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_dxt1 GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_shared_exponent GL_EXT_texture_sRGB GL_EXT_texture_sRGB_decode GL_EXT_texture_storage GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback2 GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_EXT_vertex_attrib_64bit GL_EXT_import_sync_object GL_IBM_rasterpos_clip GL_IBM_texture_mirrored_repeat GL_KHR_context_flush_control GL_KHR_debug GL_KHR_robust_buffer_access_behavior GL_KHR_robustness GL_KTX_buffer_region GL_NV_bindless_multi_draw_indirect GL_NV_bindless_multi_draw_indirect_count GL_NV_bindless_texture GL_NV_blend_equation_advanced GL_NV_blend_square GL_NV_command_list GL_NV_compute_program5 GL_NV_conditional_render GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_depth_buffer_float GL_NV_depth_clamp GL_NV_draw_texture GL_NV_ES1_1_compatibility GL_NV_ES3_1_compatibility GL_NV_explicit_multisample GL_NV_fence GL_NV_float_buffer GL_NV_fog_distance GL_NV_fragment_program GL_NV_fragment_program_option GL_NV_fragment_program2 GL_NV_framebuffer_multisample_coverage GL_NV_geometry_shader4 GL_NV_gpu_program4 GL_NV_gpu_program4_1 GL_NV_gpu_program5 GL_NV_gpu_program5_mem_extended GL_NV_gpu_program_fp64 GL_NV_gpu_shader5 GL_NV_half_float GL_NV_light_max_exponent GL_NV_multisample_coverage GL_NV_multisample_filter_hint GL_NV_occlusion_query GL_NV_packed_depth_stencil GL_NV_parameter_buffer_object GL_NV_parameter_buffer_object2 GL_NV_path_rendering GL_NV_pixel_data_range GL_NV_point_sprite GL_NV_primitive_restart GL_NV_register_combiners GL_NV_register_combiners2 GL_NV_shader_atomic_counters GL_NV_shader_atomic_float GL_NV_shader_buffer_load GL_NV_shader_storage_buffer_object GL_NV_texgen_reflection GL_NV_texture_barrier GL_NV_texture_compression_vtc GL_NV_texture_env_combine4 GL_NV_texture_multisample GL_NV_texture_rectangle GL_NV_texture_shader GL_NV_texture_shader2 GL_NV_texture_shader3 GL_NV_transform_feedback GL_NV_transform_feedback2 GL_NV_uniform_buffer_unified_memory GL_NV_vertex_array_range GL_NV_vertex_array_range2 GL_NV_vertex_attrib_integer_64bit GL_NV_vertex_buffer_unified_memory GL_NV_vertex_program GL_NV_vertex_program1_1 GL_NV_vertex_program2 GL_NV_vertex_program2_option GL_NV_vertex_program3 GL_NVX_conditional_render GL_NVX_gpu_memory_info GL_NVX_nvenc_interop GL_NV_shader_thread_group GL_NV_shader_thread_shuffle GL_KHR_blend_equation_advanced GL_SGIS_generate_mipmap GL_SGIS_texture_lod GL_SGIX_depth_texture GL_SGIX_shadow GL_SUN_slice_accum GL_WIN_swap_hint WGL_EXT_swap_control 
19:42:00: Supported WGL extensions: WGL_ARB_buffer_region WGL_ARB_create_context WGL_ARB_create_context_profile WGL_ARB_create_context_robustness WGL_ARB_context_flush_control WGL_ARB_extensions_string WGL_ARB_make_current_read WGL_ARB_multisample WGL_ARB_pbuffer WGL_ARB_pixel_format WGL_ARB_pixel_format_float WGL_ARB_render_texture WGL_ATI_pixel_format_float WGL_EXT_create_context_es_profile WGL_EXT_create_context_es2_profile WGL_EXT_extensions_string WGL_EXT_framebuffer_sRGB WGL_EXT_pixel_format_packed_float WGL_EXT_swap_control WGL_EXT_swap_control_tear WGL_NVX_DX_interop WGL_NV_DX_interop WGL_NV_DX_interop2 WGL_NV_copy_image WGL_NV_delay_before_swap WGL_NV_float_buffer WGL_NV_multisample_coverage WGL_NV_render_depth_texture WGL_NV_render_texture_rectangle 
19:42:00: ***************************
19:42:00: *** GL Renderer Started ***
19:42:00: ***************************
19:42:00: Registering ResourceManager for type GpuProgram
19:42:00: GLSL support detected
19:42:00: GL: Using GL_EXT_framebuffer_object for rendering to textures (best)
19:42:00: FBO PF_UNKNOWN depth/stencil support: D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_L8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_A8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_A4L4 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_BYTE_LA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_R5G6B5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_B5G6R5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_A4R4G4B4 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_A1R5G5B5 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_B8G8R8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_A8R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_B8G8R8A8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_A2R10G10B10 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_A2B10G10R10 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_FLOAT16_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_FLOAT16_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_FLOAT32_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_FLOAT32_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_X8R8G8B8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_X8B8G8R8 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_SHORT_RGBA depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_R3G3B2 depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_FLOAT16_R depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:00: FBO PF_FLOAT32_R depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:01: FBO PF_FLOAT16_GR depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:01: FBO PF_FLOAT32_GR depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:01: FBO PF_SHORT_RGB depth/stencil support: D0S0 D0S8 D16S0 D24S0 D32S0 Packed-D24S8 
19:42:01: [GL] : Valid FBO targets PF_UNKNOWN PF_L8 PF_A8 PF_A4L4 PF_BYTE_LA PF_R5G6B5 PF_B5G6R5 PF_A4R4G4B4 PF_A1R5G5B5 PF_R8G8B8 PF_B8G8R8 PF_A8R8G8B8 PF_B8G8R8A8 PF_A2R10G10B10 PF_A2B10G10R10 PF_FLOAT16_RGB PF_FLOAT16_RGBA PF_FLOAT32_RGB PF_FLOAT32_RGBA PF_X8R8G8B8 PF_X8B8G8R8 PF_SHORT_RGBA PF_R3G3B2 PF_FLOAT16_R PF_FLOAT32_R PF_FLOAT16_GR PF_FLOAT32_GR PF_SHORT_RGB 
19:42:01: RenderSystem capabilities
19:42:01: -------------------------
19:42:01: RenderSystem Name: OpenGL Rendering Subsystem
19:42:01: GPU Vendor: nvidia
19:42:01: Device Name: GeForce GTX 660/PCIe/SSE2
19:42:01: Driver Version: 4.5.0.0
19:42:01:  * Fixed function pipeline: yes
19:42:01:  * Hardware generation of mipmaps: yes
19:42:01:  * Texture blending: yes
19:42:01:  * Anisotropic texture filtering: yes
19:42:01:  * Dot product texture operation: yes
19:42:01:  * Cube mapping: yes
19:42:01:  * Hardware stencil buffer: yes
19:42:01:    - Stencil depth: 8
19:42:01:    - Two sided stencil support: yes
19:42:01:    - Wrap stencil values: yes
19:42:01:  * Hardware vertex / index buffers: yes
19:42:01:  * Vertex programs: yes
19:42:01:  * Number of floating-point constants for vertex programs: 1024
19:42:01:  * Number of integer constants for vertex programs: 0
19:42:01:  * Number of boolean constants for vertex programs: 0
19:42:01:  * Fragment programs: yes
19:42:01:  * Number of floating-point constants for fragment programs: 512
19:42:01:  * Number of integer constants for fragment programs: 0
19:42:01:  * Number of boolean constants for fragment programs: 0
19:42:01:  * Geometry programs: yes
19:42:01:  * Number of floating-point constants for geometry programs: 2048
19:42:01:  * Number of integer constants for geometry programs: 0
19:42:01:  * Number of boolean constants for geometry programs: 0
19:42:01:  * Supported Shader Profiles: arbfp1 arbvp1 fp20 fp30 fp40 glsl gp4fp gp4gp gp4vp gpu_fp gpu_gp gpu_vp nvgp4 vp30 vp40
19:42:01:  * Texture Compression: yes
19:42:01:    - DXT: yes
19:42:01:    - VTC: yes
19:42:01:    - PVRTC: no
19:42:01:  * Scissor Rectangle: yes
19:42:01:  * Hardware Occlusion Query: yes
19:42:01:  * User clip planes: yes
19:42:01:  * VET_UBYTE4 vertex element type: yes
19:42:01:  * Infinite far plane projection: yes
19:42:01:  * Hardware render-to-texture: yes
19:42:01:  * Floating point textures: yes
19:42:01:  * Non-power-of-two textures: yes
19:42:01:  * Volume textures: yes
19:42:01:  * Multiple Render Targets: 8
19:42:01:    - With different bit depths: yes
19:42:01:  * Point Sprites: yes
19:42:01:  * Extended point parameters: yes
19:42:01:  * Max Point Size: 2047
19:42:01:  * Vertex texture fetch: yes
19:42:01:  * Number of world matrices: 0
19:42:01:  * Number of texture units: 32
19:42:01:  * Stencil buffer depth: 8
19:42:01:  * Number of vertex blend matrices: 0
19:42:01:    - Max vertex textures: 32
19:42:01:    - Vertex textures shared: yes
19:42:01:  * Render to Vertex Buffer : yes
19:42:01:  * GL 1.5 without VBO workaround: no
19:42:01:  * Frame Buffer objects: yes
19:42:01:  * Frame Buffer objects (ARB extension): no
19:42:01:  * Frame Buffer objects (ATI extension): no
19:42:01:  * PBuffer support: yes
19:42:01:  * GL 1.5 without HW-occlusion workaround: no
19:42:01:  * Separate shader objects: no
19:42:01: DefaultWorkQueue('Root') initialising on thread 2030.
19:42:01: DefaultWorkQueue('Root')::WorkerFunc - thread f64 starting.
19:42:01: DefaultWorkQueue('Root')::WorkerFunc - thread ea0 starting.
19:42:01: Particle Renderer Type 'billboard' registered
19:42:01: DefaultWorkQueue('Root')::WorkerFunc - thread 2610 starting.
19:42:01: DefaultWorkQueue('Root')::WorkerFunc - thread 19bc starting.
19:42:01: Creating resource group 0
19:42:01: Added resource location './assets/models' of type 'FileSystem' to resource group '0'
19:42:01: Added resource location './assets/materials' of type 'FileSystem' to resource group '0'
19:42:01: Added resource location './assets/materials/scripts' of type 'FileSystem' to resource group '0'
19:42:01: Added resource location './assets/materials/textures' of type 'FileSystem' to resource group '0'
19:42:01: Added resource location './assets/mygui' of type 'FileSystem' to resource group '0'
19:42:01: Added resource location './assets/skybox' of type 'FileSystem' to resource group '0'
19:42:01: Initialising resource group 0
19:42:01: Parsing scripts for resource group 0
19:42:01: Parsing script BoatMaterial.material
19:42:01: Parsing script CannonballMaterial.material
19:42:01: Parsing script EngineMaterial.material
19:42:01: Parsing script FigureheadMaterial.material
19:42:01: Parsing script Ocean.material
19:42:01: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource oceanGLSL.vert in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:01: High-level program GLSL/OceanVS encountered an error during loading and is thus not supported.
OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource oceanGLSL.vert in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:01: OGRE EXCEPTION(2:InvalidParametersException): Named constants have not been initialised, perhaps a compile error. in GpuProgramParameters::_findNamedConstantDefinition at src\OgreGpuProgramParams.cpp (line 1441)
19:42:01: Compiler error: invalid parameters in Ocean.material(56): setting of constant failed
19:42:01: OGRE EXCEPTION(2:InvalidParametersException): Named constants have not been initialised, perhaps a compile error. in GpuProgramParameters::_findNamedConstantDefinition at src\OgreGpuProgramParams.cpp (line 1441)
19:42:01: Compiler error: invalid parameters in Ocean.material(57): setting of constant failed
19:42:01: OGRE EXCEPTION(2:InvalidParametersException): Named constants have not been initialised, perhaps a compile error. in GpuProgramParameters::_findNamedConstantDefinition at src\OgreGpuProgramParams.cpp (line 1441)
19:42:01: Compiler error: invalid parameters in Ocean.material(58): setting of constant failed
19:42:01: OGRE EXCEPTION(2:InvalidParametersException): Named constants have not been initialised, perhaps a compile error. in GpuProgramParameters::_findNamedConstantDefinition at src\OgreGpuProgramParams.cpp (line 1441)
19:42:01: Compiler error: invalid parameters in Ocean.material(59): setting of constant failed
19:42:01: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource oceanGLSL.frag in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:01: High-level program GLSL/OceanFS encountered an error during loading and is thus not supported.
OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource oceanGLSL.frag in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:01: OGRE EXCEPTION(2:InvalidParametersException): Named constants have not been initialised, perhaps a compile error. in GpuProgramParameters::_findNamedConstantDefinition at src\OgreGpuProgramParams.cpp (line 1441)
19:42:01: Compiler error: invalid parameters in Ocean.material(69): setting of constant failed
19:42:01: OGRE EXCEPTION(2:InvalidParametersException): Named constants have not been initialised, perhaps a compile error. in GpuProgramParameters::_findNamedConstantDefinition at src\OgreGpuProgramParams.cpp (line 1441)
19:42:01: Compiler error: invalid parameters in Ocean.material(70): setting of constant failed
19:42:01: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource Ocean2GLSL.vert in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:01: High-level program GLSL/Ocean2VS encountered an error during loading and is thus not supported.
OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource Ocean2GLSL.vert in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:01: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource Ocean2GLSL.frag in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:01: High-level program GLSL/Ocean2FS encountered an error during loading and is thus not supported.
OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource Ocean2GLSL.frag in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:01: Parsing script OceanMaterial.material
19:42:01: Parsing script PaddleMaterial.material
19:42:01: Parsing script RockMaterial.material
19:42:01: Parsing script RudderMaterial.material
19:42:01: Parsing script StrawHatMaterial.material
19:42:01: Parsing script Skybox.material
19:42:01: Finished parsing scripts for resource group 0
19:42:01: Creating resources for group 0
19:42:01: All done
19:42:01: Loading resource group '0' - Resources: 1 World Geometry: 1
19:42:01: Texture: BoatTexture.png: Loading 1 faces(PF_A8R8G8B8,5172x1500x1) with 12 generated mipmaps from Image. Internal format is PF_A8R8G8B8,5172x1500x1.
19:42:02: Texture: EngineTexture.png: Loading 1 faces(PF_A8R8G8B8,1920x1080x1) with 10 generated mipmaps from Image. Internal format is PF_A8R8G8B8,1920x1080x1.
19:42:02: Texture: FigureheadTexture.png: Loading 1 faces(PF_A8R8G8B8,1920x1080x1) with 10 generated mipmaps from Image. Internal format is PF_A8R8G8B8,1920x1080x1.
19:42:02: WARNING: material OceanHLSL_GLSL has no supportable Techniques and will be blank. Explanation: 
Pass 0: Vertex program HLSL/OceanVS cannot be used - not supported.
Pass 0: Vertex program HLSL4/OceanVS cannot be used - not supported.
Pass 0: Vertex program GLSL/OceanVS cannot be used - compile error.

19:42:02: WARNING: material OceanCg has no supportable Techniques and will be blank. Explanation: 
Pass 0: Vertex program Cg/OceanVS cannot be used - not supported.

19:42:02: WARNING: material Ocean2_Cg has no supportable Techniques and will be blank. Explanation: 
Pass 0: Vertex program Cg/Ocean2VS cannot be used - not supported.

19:42:02: WARNING: material Ocean2_HLSL_GLSL has no supportable Techniques and will be blank. Explanation: 
Pass 0: Vertex program HLSL/Ocean2VS cannot be used - not supported.
Pass 0: Vertex program HLSL4/Ocean2VS cannot be used - not supported.
Pass 0: Vertex program GLSL/Ocean2VS cannot be used - compile error.
Pass 0: Vertex program GLSLES/Ocean2VS cannot be used - not supported.

19:42:02: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource morning_fr.jpg in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:02: Error loading texture morning_fr.jpg. Texture layer will be blank. Loading the texture failed with the following exception: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource morning_fr.jpg in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:02: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource flare.png in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:02: Error loading texture flare.png. Texture layer will be blank. Loading the texture failed with the following exception: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource flare.png in resource group 0 or any other group. in ResourceGroupManager::openResource at src\OgreResourceGroupManager.cpp (line 756)
19:42:02: Texture: bg_calm_ocen_water.jpg: Loading 1 faces(PF_R8G8B8,1738x1151x1) with 10 generated mipmaps from Image. Internal format is PF_X8R8G8B8,1738x1151x1.
19:42:03: Texture: PaddleTexture.png: Loading 1 faces(PF_A8R8G8B8,1920x1080x1) with 10 generated mipmaps from Image. Internal format is PF_A8R8G8B8,1920x1080x1.
19:42:03: Texture: rock_texture_1_by_mardukex.jpg: Loading 1 faces(PF_R8G8B8,3072x2304x1) with 11 generated mipmaps from Image. Internal format is PF_X8R8G8B8,3072x2304x1.
19:42:04: Texture: RudderTexture.png: Loading 1 faces(PF_R8G8B8,4160x2340x1) with 12 generated mipmaps from Image. Internal format is PF_X8R8G8B8,4160x2340x1.
19:42:05: Texture: StrawhatTexture.png: Loading 1 faces(PF_A8R8G8B8,3072x2304x1) with 11 generated mipmaps from Image. Internal format is PF_A8R8G8B8,3072x2304x1.
19:42:07: Texture: Sunny_front.jpg: Loading 1 faces(PF_R8G8B8,1024x1024x1) with 10 generated mipmaps from Image. Internal format is PF_X8R8G8B8,1024x1024x1.
19:42:07: Texture: Sunny_back.jpg: Loading 1 faces(PF_R8G8B8,1024x1024x1) with 10 generated mipmaps from Image. Internal format is PF_X8R8G8B8,1024x1024x1.
19:42:07: Texture: Sunny_left.jpg: Loading 1 faces(PF_R8G8B8,1024x1024x1) with 10 generated mipmaps from Image. Internal format is PF_X8R8G8B8,1024x1024x1.
19:42:07: Texture: Sunny_right.jpg: Loading 1 faces(PF_R8G8B8,1024x1024x1) with 10 generated mipmaps from Image. Internal format is PF_X8R8G8B8,1024x1024x1.
19:42:07: Texture: Sunny_up.jpg: Loading 1 faces(PF_R8G8B8,1024x1024x1) with 10 generated mipmaps from Image. Internal format is PF_X8R8G8B8,1024x1024x1.
19:42:07: Texture: Sunny_down.jpg: Loading 1 faces(PF_R8G8B8,1024x1024x1) with 10 generated mipmaps from Image. Internal format is PF_X8R8G8B8,1024x1024x1.
19:42:07: Mesh: Loading BackSeat.mesh.
19:42:07: Mesh: Loading Boat.mesh.
19:42:07: Mesh: Loading Cannonball.mesh.
19:42:07: Mesh: Loading Engine.mesh.
19:42:07: Mesh: Loading Figurehead.mesh.
19:42:07: Mesh: Loading FrontSeat.mesh.
19:42:07: Mesh: Loading Mugiwara.mesh.
19:42:07: Mesh: Loading Ocean.mesh.
19:42:07: Mesh: Loading Paddle_1.mesh.
19:42:07: Mesh: Loading Paddle_2.mesh.
19:42:07: Mesh: Loading PaddleCover_1.mesh.
19:42:07: Mesh: Loading PaddleCover_2.mesh.
19:42:07: Mesh: Loading Rock.mesh.
19:42:07: Mesh: Loading Rock_2.mesh.
19:42:07: Mesh: Loading Rock_3.mesh.
19:42:07: Mesh: Loading Rudder.mesh.
19:42:07: Finished loading resource group 0
19:42:07: Texture: DejaVuSansFontGenerated_15.png: Loading 1 faces(PF_A8R8G8B8,128x256x1) with 0 generated mipmaps from Image. Internal format is PF_A8R8G8B8,128x256x1.
19:42:07: Texture: MyGUI_OnePieceSkins.png: Loading 1 faces(PF_A8R8G8B8,512x256x1) with 0 generated mipmaps from Image. Internal format is PF_A8R8G8B8,512x256x1.
19:42:07: Texture: MyGUI_Pointers.png: Loading 1 faces(PF_A8R8G8B8,256x128x1) with 0 generated mipmaps from Image. Internal format is PF_A8R8G8B8,256x128x1.
